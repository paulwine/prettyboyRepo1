/**
 * ATT eDM Data Manager Configuration File (Data Definition)
 * Version - 20180606.0 prod 
 * ATT Proprietary and Confidential
 */

"undefined"==typeof DataMappingInterface||DataMappingInterface.placeholder?(DataMappingInterface={eventaction:null,eventcode:null,prioritypush:!1,scope:DataMappingInterface.placeholder&&DataMappingInterface.scope?DataMappingInterface.scope:null,eventmapurl:DataMappingInterface.placeholder&&DataMappingInterface.eventmapurl?DataMappingInterface.eventmapurl:null,eddurl:DataMappingInterface.placeholder&&DataMappingInterface.eddurl?DataMappingInterface.eddurl:null,eventmapdefaulturl:DataMappingInterface.placeholder&&DataMappingInterface.eventmapdefaulturl?DataMappingInterface.eventmapdefaulturl:"data/datalayer/eventMapping.json",edddefaulturl:DataMappingInterface.placeholder&&DataMappingInterface.edddefaulturl?DataMappingInterface.edddefaulturl:"data/datalayer/edd.json",eddsupported:!0,noConsole:"undefined"==typeof console||-1!==navigator.appName.indexOf("Internet Explorer")&&-1===navigator.appVersion.indexOf("MSIE 1"),dataset:{},datasettype:"A",edmdata:{},infoenabled:!1,version:"1.18",datatransform:!0,currentpagenameproperty:"page.pageInfo.friendlyPageName",currentpagename:null,newmodalreporting:!0,queuedeventids:{},isObjectEmpty:function(inputobject){var key;for(key in inputobject)return!1;return!0},persistenceLog:!1,logItems:{},CLFEventdata:{},clfevent:"CLF_EVENT",clfdefaultconfigurl:"data/CLF/config.json",clfconfigurl:null,clfabstract:!0,clfloglevels:{ALL:6,TRACE:5,DEBUG:4,INFO:3,WARN:2,ERROR:1},clfcurrentloglevel:"ERROR",clfglobal:"globalconfig",clfpageloaddataflush:0},DataMappingInterface.switchLogging=function(flag){return!DataMappingInterface.noConsole&&(DataMappingInterface.infoenabled=!!flag,console.info("Data Mapping Framework:: acive logging status - "+DataMappingInterface.infoenabled),DataMappingInterface.infoenabled)},DataMappingInterface.trim=function(input){return null!==input?"string"==typeof input?String.prototype.trim?input.trim():input.replace(/^\s+|\s+$/g,""):input:""},DataMappingInterface.ajax=function(dataType,url,type,successFn,errorFn,data){var xmlhttp;(xmlhttp=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP")).onreadystatechange=function(){4===xmlhttp.readyState&&(200===xmlhttp.status?""!==xmlhttp.responseText?successFn(JSON.parse(xmlhttp.responseText)):successFn("Resource Call was successfully executed but did not returned anything."):400===xmlhttp.status?errorFn("Ajax call returned with status code = 400"):0!==xmlhttp.status&&errorFn("Event Configuration file load error with status code = "+xmlhttp.status))},"POST"===type||"PUT"===type?(xmlhttp.open(type,url,!0),"json"!==dataType&&"JSON"!==dataType||xmlhttp.setRequestHeader("Content-type","application/json"),xmlhttp.setRequestHeader("Accept","application/json"),xmlhttp.send(JSON.stringify(data))):(xmlhttp.open(type,url,!1),xmlhttp.send())},DataMappingInterface.extend=function(){try{for(var previousArray=[],i=1;i<arguments.length;i++)for(var key in arguments[i])arguments[i].hasOwnProperty(key)&&(previousArray=arguments[0][key],arguments[0][key]=void 0!==previousArray?arguments[i][key].concat(previousArray):arguments[i][key])}catch(e){DataMappingInterface.showOnConsole("error",e)}return arguments[0]},DataMappingInterface.showOnConsole=function(type,msg){DataMappingInterface.noConsole||("info"===type?(DataMappingInterface.infoenabled||("undefined"!=typeof ddo?parseInt(ddo.checkDebug2()):0)>0)&&console.log("Data Mapping Framework: Info -> "+msg):"warn"===type?console.warn("Data Mapping Framework: Warning -> "+msg):console.error("Data Mapping Framework: Error -> "+msg.stack)),DataMappingInterface.isObjectEmpty(DataMappingInterface.logItems)?DataMappingInterface.logItems={logType:"info",logMessage:"("+type+") - "+msg,userID:"undefined"!=typeof ddo?ddo.getVar("user.account.appVisitorCookie"):""}:DataMappingInterface.logItems.logMessage=DataMappingInterface.logItems.logMessage+"\n("+type+") - "+msg},DataMappingInterface.arrayToObject=function(myArr){for(var objectArray={},i=0;i<myArr.length;i++){objectArray[myArr[i].name]=myArr[i].params}return objectArray},DataMappingInterface.getCLFGS=function(){return DataMappingInterface.getItem("clfbackend")[DataMappingInterface.clfglobal]},DataMappingInterface.checkLogLevelAndAct=function(){try{"NONE"!==DataMappingInterface.clfcurrentloglevel&&DataMappingInterface.clfloglevels[DataMappingInterface.getCLFGS().loglevel.toUpperCase()]>=DataMappingInterface.clfloglevels[DataMappingInterface.clfcurrentloglevel]?DataMappingInterface.setCLFData():DataMappingInterface.showOnConsole("info","checkLogLevelAndAct:: clf log for this level are not sent to backend. Check your application configuration!!!")}catch(e){DataMappingInterface.showOnConsole("error","checkLogLevelAndAct:: invalid loglevel. Check with CLF backend team.")}},DataMappingInterface.iterateToGetValue=function(currentobject,propertyname){for(var key in currentobject)if(key===propertyname)return currentobject[key];return null},DataMappingInterface.getStorageImpl=function(type){return"local"===type&&void 0!==localStorage?localStorage:"session"===type&&void 0!==sessionStorage?sessionStorage:null},DataMappingInterface.injectScript=function(url){var script=document.createElement("script");script.src=url,document.getElementsByTagName("head")[0].appendChild(script)},DataMappingInterface.tearDown=function(){DataMappingInterface.eventaction=null,DataMappingInterface.eventcode=null,DataMappingInterface.scope=null,DataMappingInterface.eventmapurl=null,DataMappingInterface.eddurl=null,DataMappingInterface.dataset={},DataMappingInterface.edmdata={},DataMappingInterface.eddsupported=!0,DataMappingInterface.currentpagename="",DataMappingInterface.CLFEventdata={},DataMappingInterface.clfabstract=!0,DataMappingInterface.clfconfigurl=null,DataMappingInterface.datasettype="A",DataMappingInterface.clfcurrentloglevel="INFO"},DataMappingInterface.broadcastQueuedEvents=function(type){var key,libraryqueuedevents=null,librarykey=null;try{if(void 0!==DataMappingInterface.queuedeventids&&null!==DataMappingInterface.queuedeventids&&"undefined"!=typeof ddo){for(key in DataMappingInterface.queuedeventids)if(type===(librarykey=key)){libraryqueuedevents=DataMappingInterface.queuedeventids[key];for(var index=0;index<libraryqueuedevents.length;index++){var eventfromdl=ddo.getEventByNum(parseInt(libraryqueuedevents[index],10));"boolean"!=typeof eventfromdl||!1!==eventfromdl?Inq.fireCustomEvent("dataReadyInDL",{eventAction:eventfromdl.eventAction,eventCode:eventfromdl.eventCode,eventOrder:libraryqueuedevents[index],data:eventfromdl}):DataMappingInterface.showOnConsole("warn","broadcastQueuedEvents():  - event id ["+libraryqueuedevents[index]+"] in queued events for ["+type+"] not found in Data Layer!!!!")}delete DataMappingInterface.queuedeventids[librarykey],DataMappingInterface.showOnConsole("info","broadcastQueuedEvents():  - Total ["+libraryqueuedevents.length+"] queued events are re-broadcasted for ["+type+"] !!!!")}}else DataMappingInterface.showOnConsole("info","broadcastQueuedEvents():  - No queued events found !!!!")}catch(e){DataMappingInterface.showOnConsole("error","broadcastQueuedEvents():  - "+e),delete DataMappingInterface.queuedeventids[type]}},DataMappingInterface.getChildScope=function(masterscope,tracker){var childscope=null;if(masterscope.$id==tracker)return masterscope;try{for(var currentscope=masterscope.$$childHead;null!=currentscope;)currentscope.$id!==tracker?(currentscope.$$childHead&&(childscope=DataMappingInterface.getChildScope(currentscope,tracker)),currentscope=null!==childscope?null:currentscope.$$nextSibling):(childscope=currentscope,currentscope=null)}catch(e){DataMappingInterface.showOnConsole("error",e)}return childscope},DataMappingInterface.addDataLayerItem=function(attribute,value){"undefined"!=typeof ddo?ddo.addItem(attribute,value):DataMappingInterface.showOnConsole("warn","addDataLayerItem(): ddo is undefined")},DataMappingInterface.getDataLayerItem=function(attribute,index){if("undefined"!=typeof ddo)return ddo.getItem(attribute,index);DataMappingInterface.showOnConsole("warn","getDataLayerItem(): ddo is undefined")},DataMappingInterface.clearDataLayerItems=function(attribute){if("undefined"!=typeof ddo)return ddo.clearItems(attribute);DataMappingInterface.showOnConsole("warn","clearDataLayerItems(): ddo is undefined")},DataMappingInterface.getItem=function(type){var fulleventmapping,mapping={};try{var currentstorage=DataMappingInterface.getStorageImpl("session");if("eventmapping"===type){fulleventmapping=JSON.parse(currentstorage.getItem("eventmapping")),DataMappingInterface.showOnConsole("info","getItem(): eventmap - "+fulleventmapping);var commonactionmapping=fulleventmapping.commonactionparams,eventspecificmapping=fulleventmapping[DataMappingInterface.eventcode];DataMappingInterface.extend(mapping,commonactionmapping,eventspecificmapping)}else if("eddmapping"===type){var eddmapping=JSON.parse(currentstorage.getItem("eddmapping"));DataMappingInterface.showOnConsole("info","getItem():eddmap -  "+eddmapping),DataMappingInterface.extend(mapping,eddmapping)}else if("clfmapping"===type){fulleventmapping=JSON.parse(currentstorage.getItem("clfmapping")),DataMappingInterface.showOnConsole("info","getItem(): clfmap - "+fulleventmapping);commonactionmapping=fulleventmapping.commonactionparams,eventspecificmapping=fulleventmapping[DataMappingInterface.eventcode];DataMappingInterface.extend(mapping,commonactionmapping,eventspecificmapping)}else if("clfbackend"===type){var backend=(fulleventmapping=JSON.parse(currentstorage.getItem("clfmapping"))).backend;DataMappingInterface.extend(mapping,backend)}else fulleventmapping=JSON.parse(currentstorage.getItem("eventmapping")),DataMappingInterface.showOnConsole("info","getItem(): pageloadmap - "+fulleventmapping),DataMappingInterface.extend(mapping,fulleventmapping.commonpageloadparams)}catch(e){DataMappingInterface.showOnConsole("error",e)}return mapping},DataMappingInterface.setItem=function(type,data){var currentstorage=DataMappingInterface.getStorageImpl("session");void 0!==currentstorage||"undefined"!==currentstorage?currentstorage.setItem(type,JSON.stringify(data)):DataMappingInterface.showOnConsole("warn","setItem():: getting storage from the system failed")},DataMappingInterface.parseEDMValues=function(edmdata){var parsedEDMData={};try{var key;for(key in edmdata)key.indexOf(".")>=0?key.indexOf("events.")<0?DataMappingInterface.eventaction.indexOf("modal")>=0&&key===DataMappingInterface.currentpagenameproperty?DataMappingInterface.currentpagename=edmdata[key]:"undefined"!=typeof ddo&&ddo.setVar(key,edmdata[key]):parsedEDMData[key.substring(7)]=edmdata[key]:parsedEDMData[key]=edmdata[key]}catch(e){DataMappingInterface.showOnConsole("error",e)}return parsedEDMData},DataMappingInterface.setValue=function(key,value){var trimmedvalue=null;try{""!==(trimmedvalue=DataMappingInterface.trim(value))&&void 0!==trimmedvalue?key.indexOf(".")>=0?key.indexOf("events.")<0?DataMappingInterface.eventaction.indexOf("modal")>=0&&key===DataMappingInterface.currentpagenameproperty?DataMappingInterface.currentpagename=value:"undefined"!=typeof ddo&&ddo.setVar(key,trimmedvalue):DataMappingInterface.edmdata[key.substring(7)]=trimmedvalue:DataMappingInterface.edmdata[key]=trimmedvalue:DataMappingInterface.showOnConsole("warn","setValue() - can't set a null or empty value for attribute: "+key)}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.sendEvent=function(){var altaction=null,altcode=null;try{DataMappingInterface.setValue("version.mappingFramework",DataMappingInterface.version),DataMappingInterface.edmdata.persistenceLog=DataMappingInterface.persistenceLog,altaction=DataMappingInterface.newmodalreporting&&DataMappingInterface.eventaction.indexOf("modal")>=0?"linkClick":DataMappingInterface.eventaction,altcode=DataMappingInterface.newmodalreporting&&DataMappingInterface.eventaction.indexOf("modal")>=0?"Link_Click":DataMappingInterface.eventcode,null!==DataMappingInterface.edmdata&&"undefined"!=typeof ddo?ddo.pushEvent(altaction,altcode,DataMappingInterface.parseEDMValues(DataMappingInterface.edmdata)):"undefined"!=typeof ddo&&ddo.pushEvent(altaction,altcode),altaction!==DataMappingInterface.eventaction&&(ddo.setVar(DataMappingInterface.currentpagenameproperty,DataMappingInterface.currentpagename),ddo.pushEvent(DataMappingInterface.eventaction,DataMappingInterface.eventcode)),DataMappingInterface.showOnConsole("info","sendEvent():: push event call for event id -"+DataMappingInterface.eventcode+" is complete!!!"),altaction=null,altcode=null,DataMappingInterface.tearDown()}catch(e){DataMappingInterface.showOnConsole("error",e),DataMappingInterface.tearDown()}},DataMappingInterface.getDMFLogs=function(){return DataMappingInterface.logItems},DataMappingInterface.setEventBasedData=function(){try{var key,j,dlname,appname,tracker,_emfromstorage="Page_Load"===DataMappingInterface.eventcode||"Virtual_Page_Load"===DataMappingInterface.eventcode?DataMappingInterface.getItem("pageload"):DataMappingInterface.getItem("eventmapping");for(key in DataMappingInterface.showOnConsole("info","setEventData():: full mapping - "+JSON.stringify(_emfromstorage)),_emfromstorage)if("session"===key){var sessionparams=_emfromstorage[key];for(j=0;j<sessionparams.length;j++)if(void 0!==sessionparams[j].key){for(var patharray=sessionparams[j].path.split("."),currentvalue=JSON.parse(DataMappingInterface.getStorageImpl("session").getItem(sessionparams[j].key)),i=0;i<patharray.length;i++)currentvalue=DataMappingInterface.iterateToGetValue(currentvalue,patharray[i]);DataMappingInterface.setValue(sessionparams[j].dlname,currentvalue)}else DataMappingInterface.setValue(sessionparams[j].dlname,DataMappingInterface.getStorageImpl("session").getItem(sessionparams[j].appname))}else if("page"===key){var pageparams=_emfromstorage[key];for(j=0;j<pageparams.length;j++)DataMappingInterface.setValue(pageparams[j].dlname,eval(pageparams[j].appname))}else if("property"===key){var propertyparams=_emfromstorage[key];for(j=0;j<propertyparams.length;j++)DataMappingInterface.setValue(propertyparams[j].dlname,propertyparams[j].appname)}else if("local"===key){var localparams=_emfromstorage[key];for(j=0;j<localparams.length;j++)DataMappingInterface.setValue(localparams[j].dlname,DataMappingInterface.getStorageImpl("local").getItem(localparams[j].appname))}else if("angular"===key)if(void 0!==angular){DataMappingInterface.showOnConsole("info","setEventBasedData()::Scope -"+DataMappingInterface.scope);var angularparams=_emfromstorage[key];for(j=0;j<angularparams.length;j++)if(angularparams[j].isfn){var servicename=DataMappingInterface.scope[angularparams[j].servicename];if(void 0!==servicename){var functionname=servicename[angularparams[j].functionname],data=functionname.apply(functionname);for(key in data)void 0!==data[key]&&DataMappingInterface.setValue(key,data[key])}else DataMappingInterface.showOnConsole("warn","setEventBasedData()::service -["+angularparams[j].servicename+"] is not defined in scope")}else dlname=angularparams[j].dlname,appname=angularparams[j].appname,DataMappingInterface.setValue(dlname,DataMappingInterface.scope[appname])}else DataMappingInterface.showOnConsole("warn","setEventBasedData()::Angular is missing. No values will be sent to data layerfor this event from Angular configuration.");else if("multiscope"===key)if(void 0!==angular){DataMappingInterface.showOnConsole("info","setEventBasedData()::Scope -"+DataMappingInterface.scope);var multiscopeparams=_emfromstorage[key];for(j=0;j<multiscopeparams.length;j++){var currentscope;dlname=multiscopeparams[j].dlname,appname=multiscopeparams[j].appname,tracker=multiscopeparams[j].tracker,multiscopeparams[j].isolatedscope?(currentscope=DataMappingInterface.getChildScope(angular.element(document.querySelector("#"+tracker)).scope(),tracker),DataMappingInterface.setValue(dlname,currentscope[appname])):(currentscope=angular.element(document.querySelector("."+tracker)).scope(),DataMappingInterface.setValue(dlname,currentscope[appname]))}}else DataMappingInterface.showOnConsole("warn","setEventBasedData()::Angular is missing. No values will be sent to data layerforthis event from Angular configuration.");DataMappingInterface.sendEvent()}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.setEDDBasedData=function(){try{var key;if(DataMappingInterface.eddsupported){var eddFromStorage=DataMappingInterface.getItem("eddmapping");for(key in DataMappingInterface.showOnConsole("info","setEDDBasedData():: edd based mapping in progress. "),DataMappingInterface.dataset)void 0!==DataMappingInterface.dataset[key]?void 0!==eddFromStorage[key]?DataMappingInterface.setValue(eddFromStorage[key],DataMappingInterface.dataset[key]):DataMappingInterface.edmdata[eddFromStorage[key]]=DataMappingInterface.dataset[key]:DataMappingInterface.showOnConsole("info","setEDDBasedData():: edd based mapping - value is null for ",key)}else for(key in DataMappingInterface.showOnConsole("info","setEDDBasedData():: direct mapping in progress."),DataMappingInterface.dataset)void 0!==DataMappingInterface.dataset[key]?DataMappingInterface.setValue(key,DataMappingInterface.dataset[key]):DataMappingInterface.showOnConsole("info","setEDDBasedData():: edd based mapping - value is null for ",key);DataMappingInterface.sendEvent()}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.setCLFData=function(){try{var key,j,appname,tracker,logname,tmpvalue,_emfromstorage;if(DataMappingInterface.clfabstract)for(key in _emfromstorage=DataMappingInterface.getItem("clfmapping"),DataMappingInterface.showOnConsole("info","setCLFData():: full mapping for current CLF event - "+JSON.stringify(_emfromstorage)),_emfromstorage)if("session"===key){var sessionparams=_emfromstorage[key];for(j=0;j<sessionparams.length;j++)if(void 0!==sessionparams[j].key){for(var patharray=sessionparams[j].path.split("."),currentvalue=JSON.parse(DataMappingInterface.getStorageImpl("session").getItem(sessionparams[j].key)),i=0;i<patharray.length;i++)currentvalue=DataMappingInterface.iterateToGetValue(currentvalue,patharray[i]);""!==DataMappingInterface.trim(currentvalue)&&(DataMappingInterface.CLFEventdata[sessionparams[j].logname]=currentvalue)}else tmpvalue=DataMappingInterface.getStorageImpl("session").getItem(sessionparams[j].appname),""!==DataMappingInterface.trim(tmpvalue)&&(DataMappingInterface.CLFEventdata[sessionparams[j].logname]=tmpvalue)}else if("page"===key){var pageparams=_emfromstorage[key];for(j=0;j<pageparams.length;j++)tmpvalue=eval(pageparams[j].appname),""!==DataMappingInterface.trim(tmpvalue)&&(DataMappingInterface.CLFEventdata[pageparams[j].logname]=tmpvalue)}else if("property"===key){var propertyparams=_emfromstorage[key];for(j=0;j<propertyparams.length;j++)tmpvalue=propertyparams[j].appname,DataMappingInterface.CLFEventdata[propertyparams[j].logname]=tmpvalue}else if("local"===key){var localparams=_emfromstorage[key];for(j=0;j<localparams.length;j++)tmpvalue=DataMappingInterface.getStorageImpl("local").getItem(localparams[j].appname),""!==DataMappingInterface.trim(tmpvalue)&&(DataMappingInterface.CLFEventdata[localparams[j].logname]=tmpvalue)}else if("angular"===key)if(void 0!==angular){DataMappingInterface.showOnConsole("info","setCLFData()::Scope -"+DataMappingInterface.scope);var angularparams=_emfromstorage[key];for(j=0;j<angularparams.length;j++)if(angularparams[j].isfn){var servicename=DataMappingInterface.scope[angularparams[j].servicename];if(void 0!==servicename){var functionname=servicename[angularparams[j].functionname],data=functionname.apply(functionname);for(key in data)void 0!==data[key]&&(DataMappingInterface.CLFEventdata[key]=data[key])}else DataMappingInterface.showOnConsole("warn","setCLFData()::service -["+angularparams[j].servicename+"] is not defined in scope")}else appname=angularparams[j].appname,tmpvalue=DataMappingInterface.scope[appname],""!==DataMappingInterface.trim(tmpvalue)&&(DataMappingInterface.CLFEventdata[angularparams[j].logname]=tmpvalue)}else DataMappingInterface.showOnConsole("warn","setCLFData()::Angular is missing. No values will be abstracted to log for this event from Angular configuration.");else if("multiscope"===key)if(void 0!==angular){DataMappingInterface.showOnConsole("info","setCLFData()::Scope -"+DataMappingInterface.scope);var multiscopeparams=_emfromstorage[key];for(j=0;j<multiscopeparams.length;j++){var currentscope;logname=multiscopeparams[j].logname,appname=multiscopeparams[j].appname,tracker=multiscopeparams[j].tracker,currentscope=multiscopeparams[j].isolatedscope?DataMappingInterface.getChildScope(angular.element(document.querySelector("#"+tracker)).scope(),tracker):angular.element(document.querySelector("."+tracker)).scope(),tmpvalue=currentscope[appname],""!==DataMappingInterface.trim(tmpvalue)&&(DataMappingInterface.CLFEventdata[logname]=tmpvalue)}}else DataMappingInterface.showOnConsole("warn","setCLFData()::Angular is missing. No values will be abstarcted for logging for this event from Angular configuration.");DataMappingInterface.CLFEventdata.logLevel=DataMappingInterface.clfcurrentloglevel,DataMappingInterface.logData()}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.logData=function(isflush){var _bkconfig,serviceurl,_gconfig,_activeendpoint,_cureventdata;try{this.succuessfn=function(data){console.info("logData:: CLF log success -"+data)},this.errorfn=function(data){console.error("logData:: CLF logging error -"+data)},serviceurl=(_activeendpoint=(_bkconfig=DataMappingInterface.getItem("clfbackend"))[(_gconfig=_bkconfig[DataMappingInterface.clfglobal]).activeendpoint]).protocol+"://"+_activeendpoint.server+":"+_activeendpoint.port+_activeendpoint.resource,0===DataMappingInterface.clfpageloaddataflush&&(DataMappingInterface.clfpageloaddataflush=_gconfig.overridebatchprocess?1:2),this._eventbatch="undefined"!==localStorage.getItem("_clfevtsdt")&&null!==localStorage.getItem("_clfevtsdt")?JSON.parse(localStorage.getItem("_clfevtsdt")).data:[],void 0!==isflush&&!0===isflush?DataMappingInterface.isObjectEmpty(this._eventbatch)||(DataMappingInterface.ajax("json",encodeURI(serviceurl),"POST",this.succuessfn,this.errorfn,{events:this._eventbatch}),DataMappingInterface.updateLocalStorage("_clfevtsdt",[],!0),DataMappingInterface.clfpageloaddataflush=2):(_cureventdata=DataMappingInterface.clfabstract?DataMappingInterface.extend(DataMappingInterface.CLFEventdata,DataMappingInterface.edmdata):DataMappingInterface.edmdata,DataMappingInterface.isObjectEmpty(this._eventbatch)?this._eventbatch[0]=_cureventdata:this._eventbatch[this._eventbatch.length]=_cureventdata,this._eventbatch.length>=_gconfig.batchsize&&DataMappingInterface.clfpageloaddataflush>1?(DataMappingInterface.ajax("json",encodeURI(serviceurl),"POST",this.succuessfn,this.errorfn,{events:this._eventbatch}),DataMappingInterface.updateLocalStorage("_clfevtsdt",[],!0)):DataMappingInterface.updateLocalStorage("_clfevtsdt",this._eventbatch,!0)),DataMappingInterface.tearDown()}catch(e){return DataMappingInterface.showOnConsole("error",e),!1}return!1},DataMappingInterface.pushToTempHold=function(eventdata){try{return console.info("mappingframework: holding the event for data manager"),this.tempHold="undefined"!==localStorage.getItem("_dmnahold")&&null!==localStorage.getItem("_dmnahold")?JSON.parse(localStorage.getItem("_dmnahold")).data:[],DataMappingInterface.isObjectEmpty(this.tempHold)?this.tempHold[0]=eventdata:this.tempHold[this.tempHold.length]=eventdata,DataMappingInterface.updateLocalStorage("_dmnahold",this.tempHold,!0),!0}catch(e){return DataMappingInterface.showOnConsole("error",e),!1}},DataMappingInterface.updateLocalStorage=function(name,input,isarray){isarray?localStorage.setItem(name,JSON.stringify({data:input})):localStorage.setItem(name,input)},DataMappingInterface.mappingExists=function(type,url){try{if(DataMappingInterface.getStorageImpl("session").getItem(type)&&("eddmapping"===type&&url===DataMappingInterface.getStorageImpl("session").getItem("edd_ldph")||"eventmapping"===type&&url===DataMappingInterface.getStorageImpl("session").getItem("event_ldph")||"clfmapping"===type&&url===DataMappingInterface.getStorageImpl("session").getItem("clf_ldph")))return!0}catch(e){return DataMappingInterface.showOnConsole("error",e),!1}return!1},DataMappingInterface.success=function(data){try{if(void 0!==DataMappingInterface.eventcode)if("D"===DataMappingInterface.datasettype){var eddmapping=data.eddmapping;DataMappingInterface.showOnConsole("info","success():: setting data for edd mapping -"+eddmapping),DataMappingInterface.setItem("eddmapping",eddmapping),DataMappingInterface.getStorageImpl("session").setItem("edd_ldph",DataMappingInterface.eddurl),DataMappingInterface.setEDDBasedData()}else if("A"===DataMappingInterface.datasettype){var eventmapping={},inputdatamap=data.eventmapping;DataMappingInterface.showOnConsole("info","success():: setting data for event mapping - ");for(var i=0;i<inputdatamap.length;i++){var mappingname=inputdatamap[i].name;DataMappingInterface.showOnConsole("info","success():: mapping started for - "+mappingname),eventmapping[mappingname]=DataMappingInterface.arrayToObject(inputdatamap[i].params)}DataMappingInterface.setItem("eventmapping",eventmapping),DataMappingInterface.getStorageImpl("session").setItem("event_ldph",DataMappingInterface.eventmapurl),DataMappingInterface.setEventBasedData()}else{var clfmapping={};inputdatamap=data.clfmapping;DataMappingInterface.showOnConsole("info","success():: setting data for clf mapping - ");for(i=0;i<inputdatamap.length;i++){mappingname=inputdatamap[i].name;DataMappingInterface.showOnConsole("info","success():: mapping started for - "+mappingname),clfmapping[mappingname]=DataMappingInterface.arrayToObject(inputdatamap[i].params)}DataMappingInterface.setItem("clfmapping",clfmapping),DataMappingInterface.getStorageImpl("session").setItem("clf_ldph",DataMappingInterface.clfconfigurl),DataMappingInterface.checkLogLevelAndAct()}else DataMappingInterface.showOnConsole("warn","success():: Issue in fetching ajax data for the event.Specified json does not seems to have the data for this event.")}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.error=function(e){DataMappingInterface.showOnConsole("error",e)},DataMappingInterface.setMappedData=function(type){try{"A"===type?DataMappingInterface.mappingExists("eventmapping",DataMappingInterface.eventmapurl)?DataMappingInterface.setEventBasedData():DataMappingInterface.ajax("json",DataMappingInterface.eventmapurl,"GET",this.success,this.error):"D"===type?DataMappingInterface.eddsupported&&!DataMappingInterface.mappingExists("eddmapping",DataMappingInterface.eddurl)?DataMappingInterface.ajax("json",DataMappingInterface.eddurl,"GET",this.success,this.error):DataMappingInterface.setEDDBasedData():DataMappingInterface.mappingExists("clfmapping",DataMappingInterface.clfconfigurl)?DataMappingInterface.checkLogLevelAndAct():DataMappingInterface.ajax("json",DataMappingInterface.clfconfigurl,"GET",this.success,this.error)}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.disableAutoPageLoad=function(){"undefined"!=typeof ddo&&ddo.disableAutoPageLoad(),console.info("DataMappingInterface::: data manager auto pageload reporting is disabled by DMF!!!")},DataMappingInterface.resetLogs=function(){DataMappingInterface.persistenceLog=!1,DataMappingInterface.logItems={}},DataMappingInterface.customEventNotification=function(data,currentscope){DataMappingInterface.resetLogs(),DataMappingInterface.showOnConsole("info","customEventNotification():: - attribute are ....",JSON.stringify(data));var edmdata={};if(null!==data.eventType&&"generatePassThrough"===data.eventType)"undefined"!=typeof ddo&&ddo.pushEvent("flushEvents","Manually flush the event cache");else{for(var key in data)"eventAction"!==key&&"eventCode"!==key&&"prioritypush"!==key&&"datatransform"!==key&&"persistenceLog"!==key&&"logLevel"!==key&&("additionaldata"!==key?edmdata[key]=data[key]:DataMappingInterface.extend(edmdata,data[key]));data.eventAction!==DataMappingInterface.clfevent?DataMappingInterface.init({eventAction:data.eventAction,eventCode:"pageLoad"===data.eventAction?"Page_Load":data.eventCode,scope:currentscope,prioritypush:void 0!==data.prioritypush&&data.prioritypush,additionaldata:edmdata,datatransform:void 0===data.datatransform||data.datatransform,persistenceLog:void 0!==data.persistenceLog&&data.persistenceLog}):DataMappingInterface.init({eventAction:data.eventAction,eventCode:"pageLoad"===data.eventAction?"Page_Load":data.eventCode,scope:currentscope,prioritypush:void 0!==data.prioritypush&&data.prioritypush,additionaldata:edmdata,logLevel:void 0!==data.logLevel?data.logLevel:"INFO"})}},DataMappingInterface.directiveInvocation=function(attrs,currentscope){try{DataMappingInterface.resetLogs(),DataMappingInterface.showOnConsole("info","directiveInvocation():: - attribute are ....",attrs);var inputcfgargs={},additionaldata={},attributes=attrs.split(";");inputcfgargs.eventAction=attributes[0],inputcfgargs.eventCode=attributes[1],inputcfgargs.scope=currentscope,void 0!==attributes[2]&&(0===attributes[2].indexOf("{")?(void 0!==(additionaldata=JSON.parse(attributes[2])).eddsupported&&(inputcfgargs.eddsupported=additionaldata.eddsupported,delete additionaldata.eddsupported),void 0!==additionaldata.mappingurl&&(inputcfgargs.mappingurl=additionaldata.mappingurl,delete additionaldata.mappingurl),void 0!==additionaldata.dataset&&(inputcfgargs.dataset=additionaldata.dataset,delete additionaldata.dataset),void 0!==additionaldata.persistenceLog&&(inputcfgargs.persistenceLog=additionaldata.persistenceLog,delete additionaldata.persistenceLog),void 0!==additionaldata.logLevel&&(inputcfgargs.logLevel=additionaldata.logLevel,delete additionaldata.logLevel),inputcfgargs.additionaldata=additionaldata):priority=attributes[2],void 0!==attributes[3]&&(inputcfgargs.datatransform="false"!==attributes[3])),DataMappingInterface.init(inputcfgargs)}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.init=function(data){DataMappingInterface.resetLogs(),DataMappingInterface.showOnConsole("info","init():: incoming data for event- "+data.eventAction);try{void 0!==data?"undefined"!=typeof ddo?(DataMappingInterface.eventaction=void 0!==data.eventAction?data.eventAction:null,DataMappingInterface.eventcode=void 0!==data.eventCode?data.eventCode:null,DataMappingInterface.eventaction!==DataMappingInterface.clfevent?(DataMappingInterface.prioritypush=void 0!==data.prioritypush&&data.prioritypush,DataMappingInterface.scope=data.scope||DataMappingInterface.scope||null,DataMappingInterface.showOnConsole("info","init():: scope - "+DataMappingInterface.scope),DataMappingInterface.dataset=void 0!==data.dataset?data.dataset:null,DataMappingInterface.edmdata=void 0!==data.additionaldata?data.additionaldata:{},DataMappingInterface.datatransform=void 0===data.datatransform||data.datatransform,DataMappingInterface.persistenceLog=void 0!==data.persistenceLog&&data.persistenceLog,null!==DataMappingInterface.dataset?(DataMappingInterface.eddsupported=void 0===data.eddsupported||data.eddsupported,DataMappingInterface.eddurl=DataMappingInterface.eddurl||data.mappingurl||DataMappingInterface.edddefaulturl,DataMappingInterface.datasettype="D"):(DataMappingInterface.eventmapurl=DataMappingInterface.eventmapurl||data.mappingurl||DataMappingInterface.eventmapdefaulturl,DataMappingInterface.datasettype="A"),!1===data.datatransform?DataMappingInterface.sendEvent():null===DataMappingInterface.eventaction||null===DataMappingInterface.eventcode||null===DataMappingInterface.eventmapurl&&null===DataMappingInterface.eddurl?DataMappingInterface.showOnConsole("info","init():: Event input parameters are not correct..."):"pageLoad"===DataMappingInterface.eventaction?ddo.getConfig().settings.disableAutoPageLoad?DataMappingInterface.setMappedData(DataMappingInterface.datasettype):DataMappingInterface.showOnConsole("warn","init()::Data Layer autopageload handling is active,so custom page load events are not registered. Check your application configuration."):DataMappingInterface.setMappedData(DataMappingInterface.datasettype)):"FLUSH_DATA"===DataMappingInterface.eventcode?DataMappingInterface.logData(!0):(DataMappingInterface.clfconfigurl=void 0!==data.clfconfigurl?data.clfconfigurl:DataMappingInterface.clfdefaultconfigurl,DataMappingInterface.clfcurrentloglevel=void 0!==data.logLevel?data.logLevel.toUpperCase():"ERROR",DataMappingInterface.clfabstract="RUN_TIME_LOG"!==DataMappingInterface.eventcode,DataMappingInterface.edmdata=void 0!==data.additionaldata?data.additionaldata:{},DataMappingInterface.backend=void 0!==data.backend?data.backend:DataMappingInterface.backend,DataMappingInterface.datasettype="C",DataMappingInterface.setMappedData("C"))):DataMappingInterface.pushToTempHold(data):DataMappingInterface.showOnConsole("warn","init():: Parameter less call for data mapping framework. Please verify")}catch(e){DataMappingInterface.showOnConsole("error",e)}},DataMappingInterface.logEvent=function(data){DataMappingInterface.init(data)},DataMappingInterface.showOnConsole("info","Data Mapping Framework: Info -> data mapping framework was not present but initialized now!!!!")):"undefined"!=typeof console&&console.info("Data Mapping Framework: Info -> data mapping framework is already initialized on the page!!!"),void 0!==document.addEventListener&&document.addEventListener("detmScriptsReady",function(){console.info("Mappingframework:: listener for detmScriptsReady called...");try{"undefined"!==localStorage.getItem("_ipld")&&null!==localStorage.getItem("_ipld")&&localStorage.getItem("_ipld")&&(DataMappingInterface.disableAutoPageLoad(),localStorage.removeItem("_ipld")),this._cachedevents="undefined"!==localStorage.getItem("_dmnahold")&&null!==localStorage.getItem("_dmnahold")?JSON.parse(localStorage.getItem("_dmnahold")).data:[];for(var eventmapurl=DataMappingInterface.eventmapurl,eddurl=DataMappingInterface.eddurl,i=0;i<this._cachedevents.length;i++){var cachedEvent=this._cachedevents[i],method=void 0!==cachedEvent.method?cachedEvent.method:"";""!=method&&delete cachedEvent.method;var scope=DataMappingInterface.scope,id=void 0!==cachedEvent.scopeid?cachedEvent.scopeid:null;if(null!=id){var elems=document.getElementsByClassName("ng-scope");if(null!=elems&&elems.length>0){var s=angular.element(elems[0]).scope();scope=DataMappingInterface.getChildScope(s.$root,id)}delete cachedEvent.scopeid}switch(method){case"a":ddo.addItem(cachedEvent.attr,cachedEvent.value);break;case"i":case"":DataMappingInterface.init(cachedEvent);break;case"d":DataMappingInterface.directiveInvocation(cachedEvent,scope);break;case"c":DataMappingInterface.customEventNotification(cachedEvent,scope)}void 0!==eventmapurl&&null!=eventmapurl&&(DataMappingInterface.eventmapurl=eventmapurl),void 0!==eddurl&&null!=eddurl&&(DataMappingInterface.eddurl=eddurl)}localStorage.removeItem("_dmnahold"),window.dispatchEvent(new CustomEvent("DETM_DMF_READY",{}))}catch(e){console.error("dataMappingFramework:: detmScriptsReady event was captured but no pre-initialized events handled. Check with DTM@ATT Team!!!")}}),window.dispatchEvent(new CustomEvent("DETM_DMF_PARSED",{}));